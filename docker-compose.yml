# docker-compose.yml
# Place this file in the root of your pulse360 directory
version: '3.8'

services:
  # Database
  db:
    image: postgres:15
    container_name: pulse360-db
    environment:
      POSTGRES_USER: pulse360
      POSTGRES_PASSWORD: pulse360password
      POSTGRES_DB: pulse360
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pulse360"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - pulse360-network

  # Redis for caching and message broker
  redis:
    image: redis:7
    container_name: pulse360-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - pulse360-network
      
  # MinIO for file storage
  minio:
    image: minio/minio
    container_name: pulse360-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: pulse360
      MINIO_ROOT_PASSWORD: pulse360password
    command: server /data --console-address ":9001"
    networks:
      - pulse360-network

  # Shared core
  shared:
    build:
      context: ./shared
      dockerfile: Dockerfile
    container_name: pulse360-shared
    volumes:
      - ./shared:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pulse360-network
    environment:
      DATABASE_URL: postgresql://pulse360:pulse360password@db:5432/pulse360
      REDIS_URL: redis://redis:6379/0
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: pulse360
      MINIO_SECRET_KEY: pulse360password
      FLUX_AI_API_KEY: ${FLUX_AI_API_KEY}
      SECRET_KEY: ${SECRET_KEY}

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  pulse360-network:
    driver: bridge