version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=pulse360
      - POSTGRES_PASSWORD=pulse360password
      - POSTGRES_DB=pulse360
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pulse360"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  backend:
    build: ./backend
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://pulse360:pulse360password@db:5432/pulse360
      - REDIS_URL=redis://redis:6379/0
      - FLUX_AI_API_KEY=${FLUX_AI_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - RELOAD=true
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery-worker:
    build: ./backend
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    environment:
      - DATABASE_URL=postgresql://pulse360:pulse360password@db:5432/pulse360
      - REDIS_URL=redis://redis:6379/0
      - FLUX_AI_API_KEY=${FLUX_AI_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - WORKER_TYPE=celery
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - redis
      - db
      - backend

  celery-beat:
    build: ./backend
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    environment:
      - DATABASE_URL=postgresql://pulse360:pulse360password@db:5432/pulse360
      - REDIS_URL=redis://redis:6379/0
      - FLUX_AI_API_KEY=${FLUX_AI_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - WORKER_TYPE=beat
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - redis
      - db
      - backend

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:
  uploads: